name: CD 

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [server1, server2]

    steps:
      # 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # JDK 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          

      # Gradle Build
      - name: Build with Gradle
        run: |
          cd ${{matrix.service}}
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

       # Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        run: |
          cd ${{ matrix.service }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{secrets.REMOTE_IP}}
          username: ${{secrets.REMOTE_USER}}
          key: ${{secrets.SSH_PRIVATE_KEY}}
          script: |
            cd docker-compose-test
            sudo docker-compose stop
            sudo docker-compose rm -f
            sudo docker rmi $(docker images)
            sudo docker-compose up -d
            
