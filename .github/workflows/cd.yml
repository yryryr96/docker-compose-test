name: CD 

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [server1]

    steps:
      # 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # JDK 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # application.yml 생성
      - name: Create application.yml
        run: |
          mkdir -p ./src/main/resources
          touch ./src/main/resources/application.yml
          touch ./src/main/resources/application-prod.yml
          touch ./src/main/resources/application-test.yml
          echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml
          echo "${{ secrets.APPLICATION_PROD }}" > ./src/main/resources/application-prod.yml
          echo "${{ secrets.APPLICATION_TEST }}" > ./src/main/resources/application-test.yml

      # yml 생성 확인
      - name: Verify application.yml creation
        run: |
          cat ./src/main/resources/application.yml
          cat ./src/main/resources/application-prod.yml
          cat ./src/main/resources/application-test.yml
      
      # Gradle Build
      - name: Build with Gradle
        run: |
          cd ${{matrix.service}}
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

       # Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        run: |
          cd ${{ matrix.service }}
          docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.REMOTE_IP}}
          username: ${{secrets.REMOTE_USER}}
          key: ${{secrets.SSH_PRIVATE_KEY}}
          script: |
            cd docker-compose-test
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest
            chmod +x /home/ec2-user/docker-compose-test/deploy.sh
            /home/ec2-user/docker-compose-test/deploy.sh
